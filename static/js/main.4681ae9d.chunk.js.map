{"version":3,"sources":["reactComponentLib/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","useStyles","makeStyles","theme","container","display","flexDirection","margin","spacing","dropzone","alignItems","backgroundColor","borderColor","borderRadius","borderStyle","borderWidth","color","flex","marginBottom","outline","padding","transition","img","width","height","thumb","border","marginRight","boxSizing","thumbsContainer","flexWrap","marginTop","&:hover $removeBtn","opacity","thumbInner","minWidth","overflow","removeBtn","DropzoneArea","_a","onChange","maxFileSize","acceptedFiles","filesLimit","errorMessages","dropzoneText","classes","_b","useState","files","setFiles","handleDelete","index","newFiles","filter","_f","onDrop","alert","map","file","preview","URL","createObjectURL","useEffect","forEach","revokeObjectURL","React","createElement","Dropzone","onDropRejected","rejectedFiles","message","rejectedFile","includes","type","size","maxSize","accept","getRootProps","getInputProps","className","Badge","key","name","badgeContent","Fab","onClick","DeleteIcon","src","defaultProps","App","_useState","_useState2","slicedToArray","console","log","react_default","a","reactComponentLib","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4681ae9d.chunk.js","sourcesContent":["/* eslint-disable */\nimport { Badge } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React, { useState, useEffect } from 'react';\nimport Dropzone from 'react-dropzone';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar useStyles = makeStyles(function (theme) { return ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        margin: theme.spacing(2)\r\n    },\r\n    dropzone: {\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#fafafa\",\r\n        borderColor: \"#eeeeee\",\r\n        borderRadius: \"2px\",\r\n        borderStyle: \"dashed\",\r\n        borderWidth: \"2px\",\r\n        color: \"#bdbdbd\",\r\n        display: \"flex\",\r\n        flex: \"1\",\r\n        flexDirection: \"column\",\r\n        marginBottom: theme.spacing(1),\r\n        outline: \"none\",\r\n        padding: \"20px\",\r\n        transition: \"border .24s ease-in-out\"\r\n    },\r\n    img: {\r\n        display: \"block\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    },\r\n    thumb: {\r\n        display: \"inline-flex\",\r\n        borderRadius: 2,\r\n        border: \"1px solid #eaeaea\",\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 100,\r\n        height: 100,\r\n        padding: 4,\r\n        boxSizing: \"border-box\"\r\n    },\r\n    thumbsContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        marginTop: 16,\r\n        \"&:hover $removeBtn\": { opacity: 1 }\r\n    },\r\n    thumbInner: {\r\n        display: \"flex\",\r\n        minWidth: 0,\r\n        overflow: \"hidden\"\r\n    },\r\n    removeBtn: {\r\n        opacity: 0,\r\n        transition: \".5s ease\"\r\n    }\r\n}); });\r\nfunction DropzoneArea(_a) {\r\n    var onChange = _a.onChange, maxFileSize = _a.maxFileSize, acceptedFiles = _a.acceptedFiles, filesLimit = _a.filesLimit, errorMessages = _a.errorMessages, dropzoneText = _a.dropzoneText;\r\n    var classes = useStyles();\r\n    var _b = useState([]), files = _b[0], setFiles = _b[1];\r\n    var handleDelete = function (index) { return function () {\r\n        var newFiles = files.filter(function (_f, i) { return i !== index; });\r\n        onDrop(newFiles);\r\n    }; };\r\n    var onDrop = function (newFiles) {\r\n        if (newFiles.length > filesLimit) {\r\n            return alert(errorMessages.filesLimit);\r\n        }\r\n        setFiles(newFiles.map(function (file) {\r\n            return Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            });\r\n        }));\r\n        onChange(newFiles);\r\n    };\r\n    var handleDropRejected = function (rejectedFiles) {\r\n        var message = \"\";\r\n        rejectedFiles.forEach(function (rejectedFile) {\r\n            if (!acceptedFiles.includes(rejectedFile.type)) {\r\n                message += errorMessages.acceptedFiles;\r\n            }\r\n            if (rejectedFile.size > maxFileSize) {\r\n                message += errorMessages.maxFileSize;\r\n            }\r\n        });\r\n        alert(message);\r\n    };\r\n    useEffect(function () { return function () {\r\n        files.forEach(function (file) { return URL.revokeObjectURL(file.preview); });\r\n    }; }, [files]);\r\n    return (React.createElement(Dropzone, { onDrop: onDrop, onDropRejected: handleDropRejected, maxSize: maxFileSize, accept: acceptedFiles }, function (_a) {\r\n        var getRootProps = _a.getRootProps, getInputProps = _a.getInputProps;\r\n        return (React.createElement(\"section\", { className: classes.container },\r\n            React.createElement(\"div\", __assign({}, getRootProps({ className: classes.dropzone })),\r\n                React.createElement(\"input\", __assign({}, getInputProps())),\r\n                React.createElement(\"p\", null, dropzoneText)),\r\n            React.createElement(\"aside\", { className: classes.thumbsContainer }, files.map(function (file, index) { return (React.createElement(Badge, { key: file.name, badgeContent: React.createElement(Fab, { size: \"small\", className: classes.removeBtn, onClick: handleDelete(index) },\r\n                    React.createElement(DeleteIcon, null)) },\r\n                React.createElement(\"div\", { className: classes.thumb },\r\n                    React.createElement(\"div\", { className: classes.thumbInner },\r\n                        React.createElement(\"img\", { src: file.preview, className: classes.img }))))); }))));\r\n    }));\r\n}\r\nDropzoneArea.defaultProps = {\r\n    acceptedFiles: [\"image/*\", \"video/*\", \"application/*\"],\r\n    filesLimit: 3,\r\n    maxFileSize: 3000000,\r\n    errorMessages: {\r\n        acceptedFiles: \"ファイル形式をサポートしていません。\",\r\n        filesLimit: \"最大ファイル数を超えています。\",\r\n        maxFileSize: \"ファイルサイズが大きすぎます。\"\r\n    },\r\n    dropzoneText: \"ファイルをドロップまたはファイルを選択する\"\r\n};\r\n\n\nexport default DropzoneArea;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport DropzoneArea from \"./reactComponentLib\";\n\nconst App: React.FC = () => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  useEffect(() => {\n    console.log(files);\n  }, [files]);\n\n  return (\n    <div className=\"App\">\n      <DropzoneArea\n        onChange={setFiles}\n        filesLimit={2}\n        dropzoneText=\"Drag 'n' drop some files here, or click to select files\"\n        acceptedFiles={[\"image/png\"]}\n        errorMessages={{\n          acceptedFiles: \"File type is not supported.\",\n          filesLimit: \"Maximun number of files are exceeded.\",\n          maxFileSize: \"File size is too big.\"\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}